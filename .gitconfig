[user]
  name = user
  email = user@email.com
[core]
  editor = vim
  autocrlf = false
  safecrlf = false
  #pager = cat
[color]
  ui = true
[init]
  defaultBranch = main
[alias]
  undel = reflog --no-abbrev
  merge-force-write = merge -X theirs
  pushall = push --set-upstream origin --all
  pushtags = push --set-upstream origin --tags
  devinit = !git branch main && git branch develop && git flow init -f
  lol = log --pretty=oneline --abbrev-commit --graph --decorate
  lg = !git log --oneline --graph
  lgp = !git --no-pager log -20 --oneline --graph
  lgu = !git --no-pager log -20 --oneline --graph --author="user@email.com"
  ls = !git --no-pager log -20 --graph --pretty=format:'%h <%an> %ar %s'
  bv = !git --no-pager branch -v
  br = !git --no-pager branch
  lst = !git --no-pager tag -n9
  st = status --short
  lsm = ls-files --modified
  addm = !git ls-files --modified | xargs git add
  aconf = config --list --global
  co = checkout
  unstage = restore --staged *
  undochange = restore *
  amend = !git add . && git commit --amend
  origin = remote show origin
  psbr = push -u origin --all
  pstg = push -u origin --tags
  psall = !git push --all && git push --tags
  psmodule = pull --recurse-submodules
  initmodule = submodule update --init --recursive
  sw = switch
  main = switch main
  master = switch master
  stable = switch stable
  develop = switch develop
  deploy = switch deploy
  staging = switch staging
  local = switch local
  refactor = switch refactor
  test = switch test
  mgmain = merge main
  mgdevelop = merge develop  
  qmain = merge main --squash
  smain = !git branch -m master main && git symbolic-ref HEAD refs/heads/main
  ps = !git push && git switch main && git rebase develop && git push && git switch develop
  psup = push --set-upstream origin
  captag = tag -l -n1
  unstash = !git stash show -p | git apply -3 &\n& git stash drop
  commit-auth = commit --amend --author="'user <user@email.com>'" --no-edit
  clone-branches = "! git branch -a | sed -n \"/\\/HEAD /d; /\\/master$/d; /remotes/p;\" | xargs -L1 git checkout -t"
  release = !git flow release start $1 && git flow release finish $1
  psflow = !git switch main && git push && git push --tags && git switch develop && git merge main && git push 
[push]
  autoSetupRemote = True
[pull]
  rebase = true
[pager]
#  log = false
#  branch = false
